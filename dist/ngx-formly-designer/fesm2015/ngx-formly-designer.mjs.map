{"version":3,"file":"ngx-formly-designer.mjs","sources":["../../../projects/ngx-formly-designer/src/lib/formly-designer-config.ts","../../../projects/ngx-formly-designer/src/lib/wrappers/designer.ts","../../../projects/ngx-formly-designer/src/lib/models.ts","../../../projects/ngx-formly-designer/src/lib/parent.service.ts","../../../projects/ngx-formly-designer/src/lib/util.ts","../../../projects/ngx-formly-designer/src/lib/drag-drop.service.ts","../../../projects/ngx-formly-designer/src/lib/fields.service.ts","../../../projects/ngx-formly-designer/src/lib/formly-designer.service.ts","../../../projects/ngx-formly-designer/src/lib/wrappers/field-designer.ts","../../../projects/ngx-formly-designer/src/lib/extensions/designer.ts","../../../projects/ngx-formly-designer/src/lib/config.ts","../../../projects/ngx-formly-designer/src/lib/formly-designer.component.ts","../../../projects/ngx-formly-designer/src/lib/components/field-editor.ts","../../../projects/ngx-formly-designer/src/lib/components/type-select.ts","../../../projects/ngx-formly-designer/src/lib/components/field-picker.ts","../../../projects/ngx-formly-designer/src/lib/components/properties.ts","../../../projects/ngx-formly-designer/src/lib/components/types.ts","../../../projects/ngx-formly-designer/src/lib/components/wrapper-editor.ts","../../../projects/ngx-formly-designer/src/lib/components/wrapper-select.ts","../../../projects/ngx-formly-designer/src/lib/components/wrapper-picker.ts","../../../projects/ngx-formly-designer/src/lib/components/wrappers-picker.ts","../../../projects/ngx-formly-designer/src/lib/json-helper.ts","../../../projects/ngx-formly-designer/src/lib/pipes/decycle.ts","../../../projects/ngx-formly-designer/src/lib/formly-designer.module.ts","../../../projects/ngx-formly-designer/src/public_api.ts","../../../projects/ngx-formly-designer/src/ngx-formly-designer.ts"],"sourcesContent":["import { Inject, Injectable, InjectionToken } from '@angular/core';\nimport { FormlyConfig, FormlyFieldConfig } from '@ngx-formly/core';\n\nexport const FORMLY_DESIGNER_CONFIG_TOKEN = new InjectionToken<string>('FORMLY_DESIGNER_CONFIG_TOKEN');\n\nexport const DESIGNER_WRAPPER_NAME = '$designer';\nexport const FIELD_DESIGNER_WRAPPER_NAME = '$fieldDesigner';\nexport const DESIGNER_WRAPPER_TYPES = [\n  DESIGNER_WRAPPER_NAME,\n  FIELD_DESIGNER_WRAPPER_NAME,\n];\n\n@Injectable()\nexport class FormlyDesignerConfig {\n  constructor(\n    @Inject(FORMLY_DESIGNER_CONFIG_TOKEN) configs: DesignerConfigOption[] = [],\n    private formlyConfig: FormlyConfig\n  ) {\n    configs.forEach(config => this.addConfig(config));\n  }\n\n  types: { [name: string]: DesignerTypeOption } = {};\n  wrappers: { [name: string]: DesignerOption } = {};\n  settings: DesignerSettings = { showClassName: true };\n\n  addConfig(config: DesignerConfigOption): void {\n    if (config.settings) {\n      this.setSettings(config.settings);\n    }\n    if (config.types) {\n      this.setType(config.types);\n    }\n    if (config.wrappers) {\n      this.setWrapper(config.wrappers);\n    }\n  }\n\n  setSettings(settings: DesignerSettings): void {\n    if (settings.showClassName !== undefined) {\n      this.settings.showClassName = !!settings.showClassName;\n    }\n  }\n\n  setType(options: DesignerTypeOption | DesignerTypeOption[]): void {\n    if (Array.isArray(options)) {\n      options.forEach((option) => {\n        this.setType(option);\n      });\n    } else {\n      // Throw if type isn't part of the formly config\n      this.formlyConfig.getType(options.name);\n\n      if (!this.types[options.name]) {\n        this.types[options.name] = <DesignerTypeOption>{};\n      }\n\n      const type = this.types[options.name];\n      type.name = options.name;\n      type.fieldArray = !!options.fieldArray;\n      type.fieldGroup = !!options.fieldGroup;\n      type.fields = options.fields;\n    }\n  }\n\n  setWrapper(options: DesignerOption | DesignerOption[]): void {\n    if (Array.isArray(options)) {\n      options.forEach((option) => {\n        this.setWrapper(option);\n      });\n    } else {\n      // Throw if wrapper isn't part of the formly config\n      this.formlyConfig.getWrapper(options.name);\n\n      if (!this.wrappers[options.name]) {\n        this.wrappers[options.name] = <DesignerOption>{};\n      }\n\n      const wrapper = this.wrappers[options.name];\n      wrapper.name = options.name;\n      wrapper.fields = options.fields;\n    }\n  }\n}\n\nexport interface DesignerOption {\n  name: string;\n  fields?: FormlyFieldConfig[];\n}\n\nexport interface DesignerTypeOption extends DesignerOption {\n  fieldArray?: boolean;\n  fieldGroup?: boolean;\n}\n\nexport interface DesignerSettings {\n  showClassName?: boolean;\n  filterWrapper?: (wrapper: string, field: FormlyFieldConfig) => boolean;\n}\n\nexport interface DesignerConfigOption {\n  settings?: DesignerSettings;\n  types?: DesignerTypeOption[];\n  wrappers?: DesignerOption[];\n}\n","import { Component, ViewChild, ViewContainerRef } from '@angular/core';\nimport { FieldWrapper } from '@ngx-formly/core';\n\n@Component({\n  selector: 'formly-designer-wrapper',\n  template: `\n    <ng-template #fieldComponent></ng-template>\n  `\n})\nexport class FormlyDesignerWrapperComponent extends FieldWrapper {\n  @ViewChild('fieldComponent', { read: ViewContainerRef, static: true }) override fieldComponent!: ViewContainerRef;\n}\n","export enum DragDropType {\n  Type = 'formly-designer-type',\n  Field = 'formly-designer-field',\n}\n","import { Injectable } from '@angular/core';\nimport { Parent } from './parent';\n\n@Injectable()\nexport class ParentService {\n  parent?: Parent;\n\n  get children(): ReadonlyArray<Parent> { return this._children; }\n  private set children(value: ReadonlyArray<Parent>) {\n    this._children = value;\n  }\n  private _children: ReadonlyArray<Parent> = [];\n\n  addChild(child: Parent, index?: number): void {\n    const childIndex = index == null || isNaN(index) ? this.children.length :\n      Math.min(this.children.length, Math.max(0, index));\n    const children = this.children.slice();\n    children.splice(childIndex, 0, child);\n    this.children = children;\n  }\n\n  removeChild(child: Parent): void {\n    this.children = this.children.filter(c => c === child);\n  }\n\n  clearChildren(): void {\n    this.children = [];\n  }\n}\n","import { FormlyFieldConfig } from '@ngx-formly/core';\n\nexport { cloneDeep, get, set, unset } from 'lodash-es';\n\nconst keyPathMemberName = '_formlyDesignerKeyPath';\n\n// Source: https://github.com/formly-js/ngx-formly/blob/master/src/core/src/lib/utils.ts\nexport function getKeyPath(field: { key?: string | number | string[], fieldGroup?: any, fieldArray?: any }): (string | number)[] {\n  /* We store the keyPath in the field for performance reasons. This function will be called frequently. */\n  if (!(<any>field)[keyPathMemberName] || (<any>field)[keyPathMemberName].key !== field.key) {\n    let keyPath: (string | number)[] = [];\n    if (field.key) {\n      /* Also allow for an array key, hence the type check  */\n      const pathElements = isArray(field.key) ? field.key : field.key.toString().split('.');\n      for (let pathElement of pathElements) {\n        if (typeof pathElement === 'string') {\n          /* replace paths of the form names[2] by names.2, cfr. angular formly */\n          pathElement = pathElement.replace(/\\[(\\w+)\\]/g, '.$1');\n          keyPath = keyPath.concat(pathElement.split('.'));\n        } else {\n          keyPath.push(pathElement);\n        }\n      }\n      for (let i = 0; i < keyPath.length; i++) {\n        const pathElement = keyPath[i];\n        if (typeof pathElement === 'string' && /^\\d+$/.test(pathElement)) {\n          keyPath[i] = parseInt(pathElement, 10);\n        }\n      }\n    }\n    (<any>field)[keyPathMemberName] = {\n      key: field.key,\n      path: keyPath,\n    };\n  }\n\n  return (<any>field)[keyPathMemberName].path.slice();\n}\n\n\nexport function equalType(a: FormlyFieldConfig, b: FormlyFieldConfig): boolean {\n  return (!a.fieldArray === !b.fieldArray) && (!a.fieldGroup === !b.fieldGroup);\n}\n\nexport const isArray = Array.isArray;\n\n// https://stackoverflow.com/a/28953167\nexport const isEmpty = (val: any): boolean => {\n  if (val == null) {\n    return true;\n  } else if (typeof val === 'function' || typeof val === 'number' || typeof val === 'boolean' ||\n    Object.prototype.toString.call(val) === '[object Date]') {\n    return false;\n  } else if (val.length === 0) { // 0 length array or string\n    return true;\n  } else if (typeof val === 'object') {\n    // empty object\n\n    let r = true;\n    for (const _ in val)\n      r = false;\n\n    return r;\n  }\n\n  return false;\n};\n\nexport const isFunction = (val: any): boolean => typeof val === 'function';\n\nexport const isObject = (val: any): boolean => val != null && typeof val === 'object';\n\nexport const isString = (val: any): boolean => typeof val === 'string' || val instanceof String;\n\n/** Source:  https://stackoverflow.com/a/8809472 */\nexport const generateUuid = () => {\n  let d = new Date().getTime();\n  let d2 = (performance?.now && (performance.now() * 1000)) || 0;\n  return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, c => {\n    let r = Math.random() * 16;\n    if (d > 0) {\n      r = (d + r) % 16 | 0;\n      d = Math.floor(d / 16);\n    } else {\n      r = (d2 + r) % 16 | 0;\n      d2 = Math.floor(d2 / 16);\n    }\n    return (c == 'x' ? r : (r & 0x7 | 0x8)).toString(16);\n  });\n};\n","import { Injectable } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\n\n@Injectable()\nexport class DragDropService {\n  private readonly _dragging = new BehaviorSubject<string | null>(null);\n  private readonly _dropTarget = new BehaviorSubject<string | null>(null);\n\n  get dragging() { return this._dragging.value; }\n\n  get dragging$() {\n    return this._dragging.asObservable();\n  }\n\n  get dropTarget(): string | null { return this._dropTarget.value; }\n\n  set dropTarget(id: string | null) {\n    this._dropTarget.next(id);\n  }\n\n  get dropTarget$() {\n    return this._dropTarget.asObservable();\n  }\n\n  beginDrag(subject: string | null): void {\n    if (subject == null) {\n      return;\n    }\n    console.assert(this._dragging.value === null);\n    this._dragging.next(subject);\n  }\n\n  endDrag(): void {\n    if (this._dragging.value != null) {\n      this._dragging.next(null);\n    }\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { FormlyFieldConfig } from '@ngx-formly/core';\nimport { DesignerOption, FormlyDesignerConfig } from './formly-designer-config';\nimport { cloneDeep, equalType, generateUuid, getKeyPath, isArray, isString } from './util';\n\n@Injectable()\nexport class FieldsService {\n  constructor(\n    private formlyDesignerConfig: FormlyDesignerConfig\n  ) { }\n\n  getFullKeyPath(field: FormlyFieldConfig, fields: FormlyFieldConfig[]): (string | number)[] {\n    let keyPath: (string | number)[] = [];\n    if (field && field.key) {\n      const parents = new Map<FormlyFieldConfig, FormlyFieldConfig>();\n      this.traverseFields(fields, (f, path, parent) => {\n        parent && parents.set(f, parent);\n      });\n\n      keyPath = getKeyPath(field);\n      let cur = parents.get(field);\n      while (cur) {\n        keyPath = getKeyPath(cur).concat(keyPath);\n        cur = parents.get(cur);\n      }\n    }\n    return keyPath;\n  }\n\n  getTypeFields(type: string): FormlyFieldConfig[] {\n    return this.getFields(type, 'type');\n  }\n\n  getWrapperFields(wrapper: string | null | undefined): FormlyFieldConfig[] {\n    return wrapper ? this.getFields(wrapper, 'wrapper') : [];\n  }\n\n  checkField(field: FormlyFieldConfig, fields: FormlyFieldConfig[], parent?: FormlyFieldConfig): boolean {\n    if (field.key == null || (isString(field.key) && !field.key) || (isArray(field.key) && !field.key.length)) {\n      return true;\n    }\n    const fullPathByField = new Map<FormlyFieldConfig, (string | number)[]>();\n    const newPath = this.getFullKeyPath(parent || {}, fields).concat(getKeyPath(field));\n    const length = newPath.length;\n    return !this.traverseFields(fields, (f, p) => {\n      const path = fullPathByField.get(f) || fullPathByField.set(f, (p || []).concat(getKeyPath(f))).get(f);\n      if (path?.length !== length) {\n        return;\n      }\n      for (let i = 0; i < length; i++) {\n        if (path[i] !== newPath[i]) {\n          return;\n        }\n      }\n      return !equalType(field, f);\n    });\n  }\n\n  find(id: string | null, fields?: FormlyFieldConfig[]): FormlyFieldConfig | undefined {\n    if (!id || !isArray(fields)) {\n      return;\n    }\n    const stack = fields.slice();\n    while (stack.length) {\n      const field = stack.pop() as FormlyFieldConfig;\n      if (field.templateOptions?.['$designerId'] === id) {\n        return field;\n      }\n      if (field.fieldArray) {\n        stack.push(field.fieldArray);\n      } else if (field.fieldGroup) {\n        stack.push(...field.fieldGroup);\n      }\n    }\n    return;\n  }\n\n  /** Find a field by full key path  */\n  findField(field: FormlyFieldConfig, fields: FormlyFieldConfig[], parent?: FormlyFieldConfig): FormlyFieldConfig | undefined {\n    if (!field || !fields) {\n      return;\n    }\n    const fullPathByField = new Map<FormlyFieldConfig, (string | number)[]>();\n    const newPath = this.getFullKeyPath(parent || {}, fields).concat(getKeyPath(field));\n    const length = newPath.length;\n    return this.traverseFields(fields, (f, p) => {\n      const path = fullPathByField.get(f) || fullPathByField.set(f, (p || []).concat(getKeyPath(f))).get(f);\n      if (path?.length !== length) {\n        return;\n      }\n      for (let i = 0; i < length; i++) {\n        if (path[i] === newPath[i]) {\n          return f;\n        }\n      }\n      return;\n    });\n  }\n\n  mutateField(field: FormlyFieldConfig, editorField: boolean): FormlyFieldConfig {\n    field.templateOptions = { ...field.templateOptions };\n    if (!editorField && !field.templateOptions['$designerId']) {\n      field.templateOptions['$designerId'] = generateUuid();\n    }\n    if (field.fieldGroup) {\n      this.mutateFields(field.fieldGroup, editorField);\n    } else if (field.fieldArray && field.fieldArray.fieldGroup) {\n      if (editorField) {\n        this.mutateField(field.fieldArray, editorField);\n      } else {\n        // Treating fieldArrays as fieldGroups\n        // Treating fieldArrays as fieldGroups\n        field.templateOptions['$fieldArray'] = { type: field.type };\n        field.fieldGroup = field.fieldArray.fieldGroup;\n        delete field.fieldArray;\n        delete field.type;\n\n        this.mutateFields(field.fieldGroup, editorField);\n      }\n    }\n    return field;\n  }\n\n  mutateFields(fields: FormlyFieldConfig[], editorFields: boolean): void {\n    fields.forEach(field => this.mutateField(field, editorFields));\n  }\n\n  traverseFields(fields: FormlyFieldConfig[],\n    callback: (field: FormlyFieldConfig, path?: (string | number)[], parent?: FormlyFieldConfig) => boolean | any,\n    path?: (string | number)[],\n    parent?: FormlyFieldConfig): boolean | any {\n    path = path || [];\n    for (const field of fields) {\n      const value = callback(field, path, parent);\n      if (value) {\n        return value;\n      }\n      if (field.fieldArray) {\n        const arrayValue = this.traverseFields([field.fieldArray], callback, path.concat(getKeyPath(field)), field);\n        if (arrayValue) {\n          return arrayValue;\n        }\n      } else if (field.fieldGroup) {\n        const groupValue = this.traverseFields(field.fieldGroup, callback, path.concat(getKeyPath(field)), field);\n        if (groupValue) {\n          return groupValue;\n        }\n      }\n    }\n  }\n\n  private getFields(name: string, type: string): FormlyFieldConfig[] {\n    const fields = this.getDesignerOptions(type)[name]?.fields;\n    if (!fields) {\n      return [];\n    }\n    this.mutateFields(cloneDeep(fields), true);\n    return fields;\n  }\n\n  private getDesignerOptions(type: string): { [name: string]: DesignerOption } {\n    if (type === 'type') {\n      return this.formlyDesignerConfig.types;\n    }\n    if (type === 'wrapper') {\n      return this.formlyDesignerConfig.wrappers;\n    }\n    return {};\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { AbstractControl, FormArray, FormGroup } from '@angular/forms';\nimport { FormlyConfig, FormlyFieldConfig } from '@ngx-formly/core';\nimport { BehaviorSubject, Observable } from 'rxjs';\nimport { FieldsService } from './fields.service';\nimport { DesignerTypeOption, DESIGNER_WRAPPER_TYPES, FormlyDesignerConfig } from './formly-designer-config';\nimport { cloneDeep, get, isArray, isEmpty, isFunction, isString, set, unset } from './util';\n\nexport enum FieldType {\n  Plain,\n  Designer,\n}\n\n@Injectable()\nexport class FormlyDesignerService {\n  constructor(\n    private designerConfig: FormlyDesignerConfig,\n    private fieldsService: FieldsService,\n    private formlyConfig: FormlyConfig,\n  ) { }\n\n  private readonly _disabled = new BehaviorSubject<boolean>(false);\n  private readonly _designerFields = new BehaviorSubject<FormlyFieldConfig[]>([]);\n  private readonly _fields = new BehaviorSubject<FormlyFieldConfig[]>([]);\n  private readonly _selectedField = new BehaviorSubject<FormlyFieldConfig | null>(null);\n  private readonly _model = new BehaviorSubject<any>({});\n\n  get disabled(): boolean {\n    return this._disabled.value;\n  }\n\n  set disabled(value: boolean) {\n    this._disabled.next(!!value);\n  }\n\n  get disabled$(): Observable<boolean> {\n    return this._disabled.asObservable();\n  }\n\n  get selectedField$(): Observable<FormlyFieldConfig | null> {\n    return this._selectedField.asObservable();\n  }\n\n  get selectedDesignerId(): string {\n    return this._selectedField.getValue()?.templateOptions?.['$designerId'];\n  }\n\n  get designerFields(): FormlyFieldConfig[] {\n    return this._designerFields.value;\n  }\n\n  set designerFields(value: FormlyFieldConfig[]) {\n    // Prune the fields because ngx-formly pollutes them with internal state\n    // causing incorrect behavior when re-applied.\n    const fields = isArray(value) ? cloneDeep(value) : [];\n    const designerFields = this.createPrunedFields(fields, FieldType.Designer);\n    this._designerFields.next(designerFields);\n    this._fields.next(this.createPrunedFields(cloneDeep(designerFields), FieldType.Plain));\n  }\n\n  get designerFields$(): Observable<FormlyFieldConfig[]> {\n    return this._designerFields.asObservable();\n  }\n\n  get fields(): FormlyFieldConfig[] {\n    return this._fields.value;\n  }\n\n  set fields(value: FormlyFieldConfig[]) {\n    // Prune the fields because ngx-formly pollutes them with internal state\n    // causing incorrect behavior when re-applied.\n    const fields = cloneDeep(value);\n    const designerFields = this.createPrunedFields(fields, FieldType.Designer);\n    this.fieldsService.mutateFields(designerFields, false);\n    this._selectedField.next(null);\n    this._designerFields.next(designerFields);\n    this._fields.next(this.createPrunedFields(cloneDeep(designerFields), FieldType.Plain));\n  }\n\n  get fields$(): Observable<FormlyFieldConfig[]> {\n    return this._fields.asObservable();\n  }\n\n  get model(): unknown {\n    return this._model.value;\n  }\n\n  set model(value: unknown) {\n    this._model.next(value == null ? {} : value);\n  }\n\n  get model$(): Observable<unknown> {\n    return this._model.asObservable();\n  }\n\n  addField(field: FormlyFieldConfig, index?: number): void {\n    this.fieldsService.mutateField(field, false);\n\n    const fields = cloneDeep(this.designerFields);\n    const fieldIndex = (index == null || isNaN(index)) ? this.fields.length :\n      Math.min(this.fields.length, Math.max(0, index));\n\n    fields.splice(fieldIndex, 0, field);\n\n    this.updateFields(fields);\n  }\n\n  createField(type: string): FormlyFieldConfig {\n    const field = {} as FormlyFieldConfig;\n    if (type !== 'formly-group') {\n      field.type = type;\n    }\n    const designerType = this.designerConfig.types[type];\n    if (designerType?.fieldArray) {\n      field.fieldArray = { fieldGroup: [] };\n    }\n    if (type === 'formly-group' || designerType?.fieldGroup) {\n      field.fieldGroup = [];\n    }\n    return field;\n  }\n\n  didClickField(value: FormlyFieldConfig): void {\n    this._selectedField.next(value);\n  }\n\n  removeField(field: FormlyFieldConfig): void {\n    this.unsetField(field);\n    const designerId = field.templateOptions?.['$designerId'];\n    if (this.replaceField(designerId, null, this.designerFields)) {\n      this.removeControl(field.formControl);\n    }\n    this.updateFields();\n  }\n\n  updateField(original: FormlyFieldConfig | null, modified: FormlyFieldConfig): void {\n    const pruned = this.fieldsService.mutateField(this.createPrunedField(modified), false);\n    const designerId = original?.templateOptions?.['$designerId'];\n    if (this.replaceField(designerId, pruned, this.designerFields)) {\n      if (original && original.formControl !== pruned.formControl) {\n        this.unsetField(original);\n        this.removeControl(original.formControl);\n      }\n      this.updateFields();\n    }\n  }\n\n  getWrappers(field: FormlyFieldConfig): string[] {\n    if (!field || !isArray(field.wrappers)) {\n      return [];\n    }\n\n    const clonedField = cloneDeep(field);\n    let wrappers = clonedField.wrappers = (clonedField.wrappers || []);\n    const filterWrapper = this.designerConfig.settings.filterWrapper ?? ((wrapper, _) => wrapper !== 'form-field');\n    if (filterWrapper && isFunction(filterWrapper)) {\n      wrappers = wrappers.filter(w => filterWrapper(w, clonedField));\n    }\n\n    // Determine wrappers part of the formly configuration (static and dynamic) to exclude them from the result\n    const staticWrappers = (field.type && this.formlyConfig.getType(field.type).wrappers) || [];\n    const typeWrappers = staticWrappers\n      .concat(this.formlyConfig.templateManipulators.preWrapper.map(m => m(clonedField)))\n      .concat(this.formlyConfig.templateManipulators.postWrapper.map(m => m(clonedField)))\n      .concat(DESIGNER_WRAPPER_TYPES);\n\n    // Remove wrappers part of the formly configuration from the result\n    if (typeWrappers.length > 0) {\n      for (let i = wrappers.length - 1; i >= 0; i--) {\n        for (let j = typeWrappers.length - 1; j >= 0; j--) {\n          if (wrappers[i] === typeWrappers[j]) {\n            typeWrappers.splice(j, 1);\n            wrappers.splice(i, 1);\n            break;\n          }\n        }\n      }\n    }\n    return wrappers;\n  }\n\n  /** Prunes field of unrecognized properties */\n  createPrunedField(field: FormlyFieldConfig, fieldType = FieldType.Designer): FormlyFieldConfig {\n    const designerType = this.getDesignerType(field);\n    const pruned: FormlyFieldConfig = isEmpty(field.key) ? {} : { key: field.key };\n\n    if (designerType) {\n      pruned.type = designerType.name;\n      if (fieldType === FieldType.Designer && field.templateOptions?.['$designerId']) {\n        pruned.templateOptions = { $designerId: field.templateOptions['$designerId'] };\n      }\n      this.applyProperties(field, pruned, designerType.fields);\n      if (designerType.fieldArray) {\n        pruned.fieldArray = {\n          fieldGroup: this.createPrunedFields(field.fieldGroup, fieldType)\n        };\n      }\n    }\n\n    if (isArray(field.fieldGroup) && !isArray(pruned.fieldArray)) {\n      pruned.fieldGroup = this.createPrunedFields(field.fieldGroup, fieldType);\n\n      let fieldGroupClassName: string;\n      if (isString(field.fieldGroupClassName) &&\n        (fieldGroupClassName = (field.fieldGroupClassName as string).trim()).length > 0) {\n        pruned.fieldGroupClassName = fieldGroupClassName;\n      }\n    }\n\n    let className: string;\n    if (isString(field.className) && (className = (field.className as string).trim()).length > 0) {\n      pruned.className = className;\n    }\n\n    const wrappers = this.getWrappers(field);\n    if (wrappers.length > 0) {\n      pruned.wrappers = wrappers;\n      const designerWrapperFields = wrappers.map(wrapper => this.designerConfig.wrappers[wrapper])\n        .filter(designerOption => designerOption && isArray(designerOption.fields))\n        .reduce<FormlyFieldConfig[]>((previous, current) => previous.concat(current.fields || []), []);\n      this.applyProperties(field, pruned, designerWrapperFields);\n    }\n    return pruned;\n  }\n\n  /** Prunes fields of unrecognized properties */\n  createPrunedFields(fields: FormlyFieldConfig[] | undefined, fieldType = FieldType.Designer): FormlyFieldConfig[] {\n    const prunedFields: FormlyFieldConfig[] = [];\n    if (isArray(fields)) {\n      fields.forEach(field => {\n        const pruned = this.createPrunedField(field, fieldType);\n        if (field.fieldArray) {\n          pruned.fieldArray = this.createPrunedField(field.fieldArray, fieldType);\n        } else if (field.fieldGroup && !pruned.fieldArray) {\n          pruned.fieldGroup = this.createPrunedFields(field.fieldGroup, fieldType);\n        }\n        if (Object.keys(pruned).length > 0) {\n          prunedFields.push(pruned);\n        }\n      });\n    }\n    return prunedFields;\n  }\n\n  getTypeName(type: string | null | undefined): string {\n    if (type === 'formly-group') {\n      return 'fieldGroup';\n    }\n    return type ?? '';\n  }\n\n  private applyProperties(field: FormlyFieldConfig, designed: FormlyFieldConfig, designerFields: FormlyFieldConfig[] | undefined): void {\n    if (isArray(designerFields)) {\n      designerFields.forEach(designerField => {\n        const key = designerField.key;\n        if (key == null) {\n          return;\n        }\n        const value = get(field, key);\n        if (value != null && (!isString(value) || value.length > 0) && value !== designerField.defaultValue) {\n          set(designed, key, value);\n        }\n      });\n    }\n  }\n\n  private getDesignerType(field: FormlyFieldConfig): DesignerTypeOption | undefined {\n    const type = field?.templateOptions?.['$fieldArray']?.type ?? field.type;\n    const designerType = this.designerConfig.types[type];\n    if (designerType) {\n      return designerType;\n    }\n    if (field.type === 'formly-group' || (!field.type && isArray(field.fieldGroup))) {\n      return { name: field.type as string, fieldGroup: true, fields: [] };\n    }\n    return;\n  }\n\n  private replaceField(id: string, field: FormlyFieldConfig | null, fields: FormlyFieldConfig[]): boolean {\n    if (!id || !isArray(fields)) {\n      return false;\n    }\n    for (let i = 0, l = fields.length; i < l; i++) {\n      const otherField = fields[i];\n      if (otherField.templateOptions?.['$designerId'] === id) {\n        if (field == null) {\n          fields.splice(i, 1);\n        } else {\n          fields[i] = field;\n        }\n        return true;\n      }\n      if (otherField.fieldGroup && this.replaceField(id, field, otherField.fieldGroup)) {\n        return true;\n      }\n      if (otherField.fieldArray && this.replaceFieldArray(id, field, otherField)) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  private replaceFieldArray(id: string | null, field: FormlyFieldConfig | null, parent: FormlyFieldConfig): boolean {\n    if (!id) {\n      return false;\n    }\n    const fieldArray = parent.fieldArray;\n    if (!fieldArray) {\n      return false;\n    }\n    if (fieldArray.templateOptions?.['$designerId'] === id) {\n      if (field) {\n        parent.fieldArray = field;\n        return true;\n      }\n      return false;\n    }\n    if (fieldArray.fieldGroup && this.replaceField(id, field, fieldArray.fieldGroup)) {\n      return true;\n    }\n    return fieldArray.fieldArray != null && this.replaceFieldArray(id, field, fieldArray);\n  }\n\n  private buildPath(key: string, path: string, arrayNext: boolean = false) {\n    return path ? key + (arrayNext ? path : '.' + path) : key;\n  }\n\n  private path(control: AbstractControl, includeSelf: boolean = true): string {\n    let path = '';\n    let arrayNext = false;\n    let root = includeSelf ? control : control?.parent;\n    for (let child = root, parent = root?.parent; !!parent; child = parent, parent = parent.parent) {\n      if (parent instanceof FormGroup) {\n        for (const key in parent.controls) {\n          if (parent.controls[key] === child) {\n            path = this.buildPath(key, path, arrayNext);\n            arrayNext = false;\n            break;\n          }\n        }\n      } else if (parent instanceof FormArray) {\n        for (let i = 0; i < parent.length; i++) {\n          if (parent.at(i) === child) {\n            path = this.buildPath('[' + i + ']', path, arrayNext);\n            arrayNext = true;\n            break;\n          }\n        }\n      }\n    }\n    return path;\n  }\n\n  private unsetField(field: FormlyFieldConfig): void {\n    if (field.fieldArray) {\n      this.unsetField(field.fieldArray);\n    }\n    if (field.fieldGroup) {\n      field.fieldGroup.forEach(f => this.unsetField(f));\n    }\n    if (field.formControl) {\n      const path = this.path(field.formControl);\n      unset(this.model, path);\n    }\n  }\n\n  private removeControl(control: AbstractControl | undefined): void {\n    const parent = control?.parent;\n    if (parent instanceof FormGroup) {\n      for (const key in parent.controls) {\n        if (parent.controls[key] === control) {\n          parent.removeControl(key);\n          return;\n        }\n      }\n    } else if (parent instanceof FormArray) {\n      for (let i = 0; i < parent.length; i++) {\n        if (parent.at(i) === control) {\n          parent.removeAt(i);\n          return;\n        }\n      }\n    }\n  }\n\n  private updateFields(fields?: FormlyFieldConfig[], model?: any): void {\n    this.designerFields = fields ?? cloneDeep(this.designerFields);\n    // Update the selected field to use the updated instance, if any\n    this._selectedField.next(this.fieldsService.find(this.selectedDesignerId, this.designerFields) ?? null);\n    this.model = model ?? cloneDeep(this.model);\n  }\n}\n","import { DOCUMENT } from '@angular/common';\nimport {\n  ChangeDetectorRef,\n  Component,\n  ElementRef,\n  HostListener,\n  Inject,\n  NgZone,\n  OnDestroy,\n  OnInit,\n  Optional,\n  SkipSelf,\n  ViewChild,\n  ViewContainerRef\n} from '@angular/core';\nimport { FieldWrapper, FormlyFieldConfig } from '@ngx-formly/core';\nimport { isString } from 'lodash';\nimport { fromEvent, NEVER, Subscription, timer } from 'rxjs';\nimport { catchError, map, tap } from 'rxjs/operators';\nimport { DragDropService, FieldsService, FormlyDesignerService } from '../';\nimport { DragDropType } from '../models';\nimport { Parent } from '../parent';\nimport { ParentService } from '../parent.service';\nimport { cloneDeep } from '../util';\n\nexport enum DropPlacement {\n  self,\n  before,\n  after,\n}\n\n@Component({\n  selector: 'formly-designer-field-wrapper',\n  template: `\n    <div #content class=\"designer-content\" [title]=\"title\"\n      [ngClass]=\"{\n        'designer-subject': isSubject,\n        'designer-drag-source': isDragSource,\n        'designer-drop-hint': isDragging,\n        'designer-drop-target': isDropTargetSelf,\n        'designer-hover': isHovering && !isDragging\n      }\"\n      draggable=\"true\" (dragstart)=\"onDragStart($event)\" (dragend)=\"onDragEnd()\"\n      (dragenter)=\"onDragEnter($event)\" (dragleave)=\"onDragLeave($event)\" (drop)=\"onDrop($event)\"\n      (mouseout)=\"onMouseOut()\">\n      <ng-template #fieldComponent></ng-template>\n    </div>\n    <div *ngIf=\"isDropTargetBefore\" class=\"designer-drop-target-before\"></div>\n    <div *ngIf=\"isDropTargetAfter\" class=\"designer-drop-target-after\"></div>\n  `,\n  styles: [`\n    :host {\n      display: flex;\n      position: relative;\n      justify-content: flex-start;\n      align-content: flex-start;\n      align-items: flex-start;\n      margin: .25rem;\n    }\n    .designer-content {\n      border: 1px dashed #000;\n      border-radius: 5px;\n      min-height: 2rem;\n      padding: .25em 1em;\n      width: 100%;\n    }\n    .designer-content.designer-hover {\n      background-color: #f0f4c3;\n      border-color: #00c853;\n      cursor: pointer;\n    }\n    .designer-content.designer-subject {\n      border-color: #00c853;\n      border-style: solid;\n      border-width: 2px;\n    }\n    .designer-content.designer-drop-hint {\n      background-color: pink;\n      border-color: #bbdefb;\n    }\n    .designer-content.designer-drop-target {\n      background-color: #f0f4c3;\n      border-color: #00c853;\n    }\n    .designer-drag-source {\n      opacity: .4;\n    }\n    .designer-drop-target-before {\n      position: absolute;\n      top: 0;\n      left: 0;\n      right: 0;\n      background-color: aqua;\n      height: 12px;\n      pointer-events: none;\n      z-index: 1;\n    }\n    .designer-drop-target-after {\n      position: absolute;\n      bottom: 0;\n      left: 0;\n      right: 0;\n      background-color: yellow;\n      height: 12px;\n      pointer-events: none;\n      z-index: 1;\n    }\n  `],\n  providers: [\n    ParentService,\n  ],\n})\nexport class FormlyDesignerFieldWrapperComponent extends FieldWrapper implements OnInit, OnDestroy, Parent {\n  @ViewChild('fieldComponent', { read: ViewContainerRef, static: true }) override fieldComponent!: ViewContainerRef;\n  @ViewChild('content', { read: ElementRef, static: true }) content?: ElementRef<HTMLElement>;\n\n  dropTargetCounter = 0;\n  private subscriptions: Subscription[] = [];\n\n  get title(): string | null { return this._title; }\n  set title(value: string | null) {\n    if (value !== this._title) {\n      this._title = value;\n      this.changeDetector.markForCheck();\n    }\n  }\n  private _title: string | null = null;\n\n  get isDragging() { return this._isDragging; }\n  set isDragging(value: boolean) {\n    if (value !== this._isDragging) {\n      this._isDragging = value;\n      this.changeDetector.markForCheck();\n    }\n  }\n  private _isDragging = false;\n\n  get isHovering() { return this._isHovering; }\n  set isHovering(value: boolean) {\n    if (value !== this._isHovering) {\n      this._isHovering = value;\n      this.changeDetector.markForCheck();\n    }\n  }\n  private _isHovering = false;\n\n  get parent(): Parent | undefined { return this.parentParentService?.parent; }\n\n  get dropTargetPlacement(): DropPlacement | null { return this._dropTargetPlacement; }\n  set dropTargetPlacement(value: DropPlacement | null) {\n    if (value !== this._dropTargetPlacement) {\n      this._dropTargetPlacement = value;\n      this.changeDetector.markForCheck();\n    }\n  }\n  private _dropTargetPlacement: DropPlacement | null = null;\n\n  get designerId(): string | undefined { return this.field.templateOptions?.['$designerId']; }\n\n  get isFieldGroup(): boolean { return Array.isArray(this.field.fieldGroup); }\n\n  get isDragSource(): boolean {\n    return this.dragDropService.dragging === this.designerId;\n  }\n\n  get isDropTarget(): boolean {\n    return this.dragDropService.dropTarget === this.designerId;\n  }\n\n  get isDropTargetSelf(): boolean {\n    return this.isDropTarget && !this.dropTargetPlacement && this.isFieldGroup;\n  }\n\n  get isDropTargetBefore(): boolean {\n    return this.isDropTarget && this.dropTargetPlacement === DropPlacement.before;\n  }\n\n  get isDropTargetAfter(): boolean {\n    return this.isDropTarget && this.dropTargetPlacement === DropPlacement.after;\n  }\n\n  get isSubject(): boolean {\n    return this.formlyDesignerService.selectedDesignerId === this.designerId;\n  }\n\n  constructor(\n    private changeDetector: ChangeDetectorRef,\n    private dragDropService: DragDropService,\n    private fieldsService: FieldsService,\n    public formlyDesignerService: FormlyDesignerService,\n    private zone: NgZone,\n    parentService: ParentService,\n    @Inject(DOCUMENT) private document?: any,\n    @SkipSelf() @Optional() private parentParentService?: ParentService,\n  ) {\n    super();\n    parentService.parent = this;\n    if (parentParentService) {\n      parentParentService.addChild(this);\n    }\n  }\n\n  ngOnInit(): void {\n    if (!this.document?.defaultView) {\n      return;\n    }\n    const content = this.content?.nativeElement;\n    if (!content) {\n      return;\n    }\n    this.subscriptions.push(\n      this.dragDropService.dragging$.subscribe(dragging => this.isDragging = dragging != null),\n      fromEvent(this.document.defaultView, 'mouseup').subscribe(this.onWindowMouseUp.bind(this)),\n    );\n    this.zone.runOutsideAngular(() => {\n      this.subscriptions.push(\n        fromEvent(content, 'dragover').subscribe(e => this.onDragOver(e as DragEvent)),\n        fromEvent(content, 'mouseover').subscribe(e => this.onMouseOver(e as MouseEvent)),\n      );\n    });\n  }\n\n  ngOnDestroy(): void {\n    this.subscriptions.splice(0).forEach(subscription => subscription.unsubscribe());\n    this.parentParentService?.removeChild(this);\n  }\n\n  @HostListener('click', ['$event'])\n  onClick(event: MouseEvent): void {\n    event.stopPropagation();\n    this.formlyDesignerService.didClickField(this.field);\n  }\n\n  onDragStart(event: DragEvent): void {\n    if (this.dragDropService.dragging) {\n      return;\n    }\n    event.dataTransfer?.setData(DragDropType.Field, this.designerId ?? '');\n    this.dragDropService.beginDrag(this.designerId ?? null);\n  }\n\n  onDragEnd(): void {\n    this.dragDropService.endDrag();\n  }\n\n  onDragEnter(event: DragEvent): void {\n    if (!this.shouldHandleDragEvent(event)) {\n      return;\n    }\n    event.preventDefault();\n    this.dropTargetCounter++;\n  }\n\n  onDragLeave(event: DragEvent): void {\n    if (!this.shouldHandleDragEvent(event)) {\n      return;\n    }\n    if (this.dropTargetCounter > 0) {\n      this.dropTargetCounter--;\n      if (this.dropTargetCounter === 0) {\n        this.dropTargetPlacement = null;\n      }\n    }\n  }\n\n  onDragOver(event: DragEvent): void {\n    if (event.defaultPrevented || !this.shouldHandleDragEvent(event)) {\n      return;\n    }\n    this.zone.run(() => {\n      this.dropTargetPlacement = this.getDropTargetPlacement(event);\n      this.dragDropService.dropTarget = this.field.templateOptions?.['$designerId'] ?? null;\n    });\n    event.preventDefault();\n  }\n\n  private shouldHandleDragEvent(event: DragEvent): boolean {\n    if (event.dataTransfer?.types.some(t => t === DragDropType.Field)) {\n      return this.dragDropService.dragging !== this.designerId;\n    }\n    return !!event.dataTransfer?.types.some(t => t === DragDropType.Type) &&\n      isString(this.dragDropService.dragging);\n  }\n\n  private getDropTargetPlacement(event: DragEvent): DropPlacement {\n    const rect = this.content?.nativeElement.getBoundingClientRect();\n    if (rect) {\n      const threshold = rect.height * .33;\n      if (event.clientY < rect.top + threshold) {\n        return DropPlacement.before;\n      }\n      if (event.clientY > rect.bottom - threshold) {\n        return DropPlacement.after;\n      }\n    }\n    return DropPlacement.self;\n  }\n\n  onDrop(event: DragEvent): void {\n    if (this.shouldHandleDragEvent(event)) {\n      event.stopPropagation();\n      if (event.dataTransfer?.types.includes(DragDropType.Field)) {\n        const designerId = this.dragDropService.dragging;\n        const field = this.fieldsService.find(designerId, this.formlyDesignerService.designerFields);\n        if (field) {\n          // Get placement index before the fields refresh caused by removal\n          const index = this.getDropPlacementIndex(field);\n          this.formlyDesignerService.removeField(field);\n          if (this.parent && this.dropTargetPlacement !== DropPlacement.self) {\n            this.parent.addChildField(field, index);\n          } else {\n            this.addChildField(field);\n          }\n        }\n      } else if (event.dataTransfer?.types.includes(DragDropType.Type)) {\n        if (this.dragDropService.dragging) {\n          if (this.parent && this.dropTargetPlacement !== DropPlacement.self) {\n            this.parent.addChildType(this.dragDropService.dragging, this.getDropPlacementIndex());\n          } else {\n            this.addChildType(this.dragDropService.dragging);\n          }\n        }\n      }\n    }\n    this.dragDropService.endDrag();\n    this.resetDrop();\n  }\n\n  onMouseOver(event: MouseEvent): void {\n    event.stopPropagation();\n    this.zone.run(() => {\n      this.isHovering = true;\n      this.title = this.dragDropService.dragging == null ?\n        `Click to edit ${this.formlyDesignerService.getTypeName(this.field.type)}` :\n        null;\n    });\n  }\n\n  onMouseOut(): void {\n    this.isHovering = false;\n  }\n\n  onWindowMouseUp(): void {\n    this.resetDrop();\n  }\n\n  async addChildField(field: FormlyFieldConfig, index?: number): Promise<void> {\n    if (!this.isFieldGroup) {\n      return;\n    }\n    if (!this.fieldsService.checkField(field, this.formlyDesignerService.designerFields, this.field)) {\n      return;\n    }\n    const updatedField = cloneDeep(this.field);\n    if (!updatedField.fieldGroup) {\n      return;\n    }\n    const fieldIndex = (index == null || isNaN(index)) ? updatedField.fieldGroup.length :\n      Math.min(updatedField.fieldGroup.length, Math.max(0, index));\n    updatedField.fieldGroup.splice(fieldIndex, 0, field);\n    return timer(0)\n      .pipe(\n        tap(() => this.formlyDesignerService.updateField(this.field, updatedField)),\n        catchError(() => NEVER),\n        map(() => undefined)\n      ).toPromise();\n  }\n\n  async addChildType(type: string, index?: number): Promise<void> {\n    const field = this.formlyDesignerService.createField(type);\n    await this.addChildField(field, index);\n  }\n\n  /**\n   * @param dropField - field to ignore for index determination\n   */\n  private getDropPlacementIndex(dropField?: FormlyFieldConfig): number | undefined {\n    if (this.parent && this.dropTargetPlacement !== DropPlacement.self) {\n      const parentChildren = dropField ?\n        this.parentParentService?.children.filter(fd => fd.designerId !== dropField.templateOptions?.['$designerId']) :\n        this.parentParentService?.children;\n      const dropIndex = parentChildren?.indexOf(this) ?? 0;\n      return this.dropTargetPlacement === DropPlacement.before ? dropIndex : dropIndex + 1;\n    }\n    return;\n  }\n\n  private resetDrop(): void {\n    this.dropTargetCounter = 0;\n    this.dropTargetPlacement = null;\n    if (this.isDropTarget) {\n      this.dragDropService.dropTarget = null;\n    }\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { FormlyExtension, FormlyFieldConfig } from '@ngx-formly/core';\nimport { DESIGNER_WRAPPER_NAME, FIELD_DESIGNER_WRAPPER_NAME } from '../formly-designer-config';\n\n/** Creates a wrapper sandwich to augment the form */\n@Injectable()\nexport class DesignerExtension implements FormlyExtension {\n  postPopulate(field: FormlyFieldConfig) {\n    // Only surround non-editor fields; assumes editor fields have no $designerId\n    if (field?.templateOptions?.['$designerId']) {\n      field.wrappers = [FIELD_DESIGNER_WRAPPER_NAME, ...(field.wrappers || []), DESIGNER_WRAPPER_NAME];\n    }\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { ConfigOption } from '@ngx-formly/core';\nimport { DesignerExtension } from './extensions/designer';\nimport {\n  DESIGNER_WRAPPER_NAME,\n  FIELD_DESIGNER_WRAPPER_NAME\n} from './formly-designer-config';\nimport { FormlyDesignerWrapperComponent } from './wrappers/designer';\nimport { FormlyDesignerFieldWrapperComponent } from './wrappers/field-designer';\n\nexport const fieldComponents = [];\n\nexport const wrapperComponents = [\n  FormlyDesignerWrapperComponent,\n  FormlyDesignerFieldWrapperComponent\n];\n\n@Injectable()\nexport class Config implements ConfigOption {\n  wrappers: { name: string; component: any; }[];\n  extensions: { name: string; extension: any; }[];\n  constructor(\n    designerExtension: DesignerExtension\n  ) {\n    this.wrappers = [\n      { name: DESIGNER_WRAPPER_NAME, component: FormlyDesignerWrapperComponent },\n      { name: FIELD_DESIGNER_WRAPPER_NAME, component: FormlyDesignerFieldWrapperComponent },\n    ];\n    this.extensions = [\n      { name: 'designer', extension: designerExtension }\n    ];\n  }\n}\n","import {\n  Component,\n  EventEmitter,\n  Input,\n  OnDestroy,\n  OnInit,\n  Output,\n  ViewChild,\n  ViewContainerRef,\n  ViewEncapsulation\n} from '@angular/core';\nimport { FormBuilder, FormGroup } from '@angular/forms';\nimport { FormlyFieldConfig } from '@ngx-formly/core';\nimport { isString } from 'lodash';\nimport { merge, NEVER, Observable, Subscription, timer } from 'rxjs';\nimport { catchError, debounceTime, map, tap } from 'rxjs/operators';\nimport { DragDropService, FieldsService, FieldType, FormlyDesignerService } from './';\nimport { ParentService } from './parent.service';\n\n@Component({\n  selector: 'formly-designer',\n  template: `\n    <form novalidate [formGroup]=\"form\">\n      <formly-form *ngIf=\"fields.length > 0; else placeholder\" [options]=\"options\" [model]=\"model\" [form]=\"form\" [fields]=\"(formlyDesignerService.designerFields$ | async) ?? []\">\n      </formly-form>\n      <ng-template #placeholder>\n        <div class=\"content d-flex justify-content-center align-items-center\"\n          [ngClass]=\"{ 'drop-hint': isDragging$ | async, 'drop-target': dropTargetCounter > 0 }\"\n          (dragenter)=\"onDragEnter($event)\" (dragleave)=\"onDragLeave()\" (dragover)=\"onDragOver($event)\" (drop)=\"onDrop($event)\">\n          <div>+</div>\n        </div>\n      </ng-template>\n    </form>\n    <!--<div>\n      Designer Fields:\n      <pre>{{ formlyDesignerService.designerFields$ | async | decycle | json }}</pre>\n    </div>-->\n  `,\n  styles: [`\n    formly-designer > form > .content {\n      border: 1px dashed #000;\n      border-radius: 5px;\n      min-height: 2rem;\n      padding: 1.5em 1em 0 1em;\n      width: 100%;\n    }\n    formly-designer > form > .content.drop-hint {\n      background-color: #e3f2fd;\n      border-color: #bbdefb;\n    }\n    formly-designer > form > .content.drop-target {\n      background-color: #f0f4c3;\n      border-color: #00c853;\n    }\n    formly-designer > form > .content > div {\n      padding: 2rem;\n      padding-bottom: 4rem;\n      font-size: 64pt;\n      pointer-events: none;\n    }\n    formly-designer-field-picker .form-group > .input-group > formly-designer-type-select > select {\n      border-radius: .25rem 0 0 .25rem;\n      border-right: 0;\n    }\n    formly-designer-wrapper-editor .card > .card-body .form-control {\n      width: 100%;\n    }\n    formly-designer-wrapper-picker .form-group > .input-group > formly-designer-wrapper-select > select {\n      border-radius: .25rem 0 0 .25rem;\n      border-right: 0;\n    }\n  `],\n  providers: [\n    ParentService,\n  ],\n  encapsulation: ViewEncapsulation.None\n})\nexport class FormlyDesignerComponent implements OnDestroy, OnInit {\n  @ViewChild('formlyFormContainer', { read: ViewContainerRef, static: true }) formlyFormContainer?: ViewContainerRef;\n  @Output() fieldsChange = new EventEmitter<FormlyFieldConfig[]>();\n  @Output() modelChange = new EventEmitter<any>();\n\n  types: string[] = [];\n  wrappers: string[] = [];\n  properties: string[] = [];\n  debugFields: FormlyFieldConfig[] = [];\n  isDragging$: Observable<boolean>;\n  dropTargetCounter = 0;\n\n  form: FormGroup;\n  options: any = {};\n\n  get designerId(): string { return ''; }\n\n  private readonly subscriptions: Subscription[] = [];\n\n  constructor(\n    private dragDropService: DragDropService,\n    private fieldsService: FieldsService,\n    private formBuilder: FormBuilder,\n    public formlyDesignerService: FormlyDesignerService,\n    private parentService: ParentService,\n  ) {\n    parentService.parent = this;\n\n    // Editor forms will be restricted to a single field depth; all designer keys should be\n    // complex (e.g. \"templateOptions.some.property\")\n    this.form = this.formBuilder.group({});\n    this.isDragging$ = this.dragDropService.dragging$.pipe(map(dragging => dragging != null));\n  }\n\n  @Input()\n  get disabled(): boolean {\n    return this.formlyDesignerService.disabled;\n  }\n\n  set disabled(value: boolean) {\n    this.formlyDesignerService.disabled = value;\n  }\n\n  @Input()\n  get fields(): FormlyFieldConfig[] {\n    return this.formlyDesignerService.fields;\n  }\n\n  set fields(value: FormlyFieldConfig[]) {\n    this.formlyDesignerService.fields = value;\n  }\n\n  @Input()\n  get model(): any {\n    return this.formlyDesignerService.model;\n  }\n\n  set model(value: any) {\n    this.formlyDesignerService.model = value;\n  }\n\n  ngOnInit(): void {\n    this.subscriptions.push(\n      this.formlyDesignerService.designerFields$\n        .subscribe(fields => {\n          // Clear the existing children before the form reset\n          this.parentService.clearChildren();\n\n          this.options = {};\n          this.form = this.formBuilder.group({});\n          this.fieldsChange.emit(this.formlyDesignerService.createPrunedFields(fields, FieldType.Plain));\n        }),\n\n      merge(this.formlyDesignerService.model$, this.form.valueChanges)\n        .pipe(debounceTime(50))\n        .subscribe(() => this.modelChange.emit(this.formlyDesignerService.model)),\n    );\n  }\n\n  ngOnDestroy(): void {\n    this.subscriptions.splice(0).forEach(subscription => subscription.unsubscribe());\n  }\n\n  onFieldSelected(field: FormlyFieldConfig): void {\n    timer(0).pipe(\n      tap(() => {\n        if (this.fieldsService.checkField(field, this.formlyDesignerService.designerFields)) {\n          this.formlyDesignerService.addField(field);\n        }\n      }),\n      catchError(() => NEVER)).subscribe();\n  }\n\n  onDragEnter(event: DragEvent): void {\n    event.preventDefault();\n    this.dropTargetCounter++;\n  }\n\n  onDragLeave(): void {\n    if (this.dropTargetCounter > 0) {\n      this.dropTargetCounter--;\n    }\n  }\n\n  onDragOver(event: DragEvent): void {\n    event.preventDefault();\n  }\n\n  onDrop(event: DragEvent): void {\n    if (this.fields.length) {\n      return;\n    }\n    if (!isString(this.dragDropService.dragging)) {\n      return;\n    }\n    this.addChildType(this.dragDropService.dragging);\n    event.preventDefault();\n  }\n\n  addChildField(field: FormlyFieldConfig, index?: number): void {\n    this.formlyDesignerService.addField(field, index);\n  }\n\n  addChildType(type: string, index?: number): void {\n    const field = this.formlyDesignerService.createField(type);\n    this.addChildField(field, index);\n  }\n}\n","import { Component, ElementRef, forwardRef, Input, OnDestroy, OnInit, ViewChild } from '@angular/core';\nimport { ControlValueAccessor, FormBuilder, FormControl, FormGroup, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { FormlyFieldConfig } from '@ngx-formly/core';\nimport { merge, Subscription } from 'rxjs';\nimport { debounceTime } from 'rxjs/operators';\nimport { FieldsService, FormlyDesignerConfig } from '..';\nimport { cloneDeep, isObject, isString } from '../util';\n\nconst FIELD_EDITOR_CONTROL_VALUE_ACCESSOR: any = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => FieldEditorComponent),\n  multi: true\n};\n\n@Component({\n  selector: 'formly-designer-field-editor',\n  template: `\n    <form [formGroup]=\"form\" novalidate>\n      <div class=\"card card-d-editor\">\n        <div class=\"card-header\" [ngClass]=\"{solo: !hasContent && fields.length === 0}\">\n          <div class=\"form-group\">\n            <label class=\"form-control-label\">name</label>\n            <input formControlName=\"key\" class=\"form-control\">\n          </div>\n          <div *ngIf=\"formlyDesignerConfig.settings.showClassName\" class=\"form-group\">\n            <label class=\"form-control-label\">className</label>\n            <input formControlName=\"className\" class=\"form-control\">\n          </div>\n          <div *ngIf=\"fieldGroup && formlyDesignerConfig.settings.showClassName\" class=\"form-group\">\n            <label class=\"form-control-label\">fieldGroupClassName</label>\n            <input formControlName=\"fieldGroupClassName\" class=\"form-control\">\n          </div>\n          <!--\n          <div *ngIf=\"false\" class=\"form-group\"\n            [ngClass]=\"{'has-danger': form.hasError('type') && (type.dirty || type.touched)}\">\n            <label class=\"form-control-label\">type</label>\n            <formly-designer-type-select formControlName=\"type\" [fieldGroup]=\"fieldGroup\" [type]=\"type.value\"></formly-designer-type-select>\n            <div *ngIf=\"form.hasError('type') && (type.dirty || type.touched)\" class=\"form-control-feedback\">\n              type required.\n            </div>\n          </div>\n          <div *ngIf=\"false\" class=\"form-group\">\n            <label class=\"form-control-label\">wrappers</label>\n            <formly-designer-wrappers-picker [field]=\"field\"\n              (selected)=\"onWrappersSelected($event)\">\n            </formly-designer-wrappers-picker>\n          </div>\n          -->\n        </div>\n        <div #block class=\"card-body\">\n          <formly-form *ngIf=\"fields.length > 0\" [form]=\"fieldForm\" [fields]=\"fields\" [model]=\"field\">\n          </formly-form>\n          <ng-content></ng-content>\n        </div>\n      </div>\n    </form>\n  `,\n  styles: [`\n    .card-header.solo {\n      border-bottom: 0;\n    }\n    .card-header.solo + .card-body {\n      display: none;\n    }\n  `],\n  providers: [\n    FIELD_EDITOR_CONTROL_VALUE_ACCESSOR\n  ]\n})\nexport class FieldEditorComponent implements ControlValueAccessor, OnDestroy, OnInit {\n  @Input() fieldGroup = false;\n  @Input() showType = false;\n  @Input() showWrappers = false;\n  @Input() hasContent = false;\n  @ViewChild('block', { static: true }) blockElRef?: ElementRef;\n\n  private readonly subscriptions: Subscription[] = [];\n  private valueChangesSubscription?: Subscription;\n\n  constructor(\n    private fieldsService: FieldsService,\n    private fb: FormBuilder,\n    public formlyDesignerConfig: FormlyDesignerConfig\n  ) {\n    this.form = fb.group({\n      key: this.key = fb.control(''),\n      className: this.className = fb.control(''),\n      fieldGroupClassName: this.fieldGroupClassName = fb.control(''),\n      type: this.type = fb.control('')\n    }, { validator: (control: FormGroup) => this.validator(control) });\n    this.fieldForm = fb.group({});\n  }\n\n  readonly form: FormGroup;\n  readonly key: FormControl;\n  readonly className: FormControl;\n  readonly fieldGroupClassName: FormControl;\n  readonly type: FormControl;\n\n  fieldForm: FormGroup;\n  field: FormlyFieldConfig = {};\n  fields: FormlyFieldConfig[] = [];\n  fieldArray = false;\n  invalid = false;\n\n  protected onChange = (_: any) => { };\n  protected onTouched = () => { };\n\n  ngOnInit(): void {\n    this.subscriptions.push(this.type.valueChanges\n      .subscribe(() => this.onTypeChange()));\n\n    this.subscriptions.push(this.form.statusChanges\n      .pipe(debounceTime(0))\n      .subscribe(() => this.invalid = this.form.invalid));\n\n    this.subscribeValueChanges();\n  }\n\n  ngOnDestroy(): void {\n    this.valueChangesSubscription?.unsubscribe();\n    this.subscriptions.splice(0).forEach(subscription => subscription.unsubscribe());\n  }\n\n  writeValue(obj: any) {\n    this.valueChangesSubscription?.unsubscribe();\n    this.updateField(obj);\n    this.form.markAsPristine();\n    this.form.markAsUntouched();\n    this.subscribeValueChanges();\n  }\n\n  registerOnChange(fn: any): void {\n    this.onChange = fn;\n  }\n\n  registerOnTouched(fn: any): void {\n    this.onTouched = fn;\n  }\n\n  setDisabledState(isDisabled: boolean): void {\n    if (isDisabled) {\n      this.form.disable();\n    } else {\n      this.form.enable();\n    }\n  }\n\n  private subscribeValueChanges(): void {\n    this.valueChangesSubscription = merge(this.fieldForm.valueChanges, this.form.valueChanges)\n      .pipe(debounceTime(0))\n      .subscribe(() => this.updateValue());\n  }\n\n  private updateField(field: FormlyFieldConfig): void {\n    if (!isObject(field)) {\n      field = {};\n    }\n    this.key.setValue(isString(field.key) ? field.key : '');\n    this.className.setValue(isString(field.className) ? field.className : '');\n    this.fieldGroupClassName.setValue(isString(field.fieldGroupClassName) ? field.fieldGroupClassName : '');\n    this.type.setValue(isString(field.type) ? field.type : '');\n    this.fields = this.fieldsService.getTypeFields(this.type.value);\n    this.fieldForm = this.fb.group({});\n    this.field = cloneDeep(field);\n  }\n\n  private updateValue(): void {\n    if (!this.onChange) {\n      return;\n    }\n\n    const field = this.field;\n    field.key = this.key.value;\n    field.className = this.className.value;\n    field.fieldGroupClassName = this.fieldGroupClassName.value;\n    field.type = this.type.value;\n    this.onChange(field);\n  }\n\n  private onTypeChange(): void {\n    this.valueChangesSubscription?.unsubscribe();\n    const type = this.type.value;\n    this.fields = this.fieldsService.getTypeFields(type);\n    const designerType = this.formlyDesignerConfig.types[type];\n    this.fieldArray = designerType?.fieldArray != null;\n    this.fieldForm = this.fb.group({});\n    this.field = Object.assign({}, this.field);\n    this.subscribeValueChanges();\n  }\n\n  onWrappersSelected(field: FormlyFieldConfig): void {\n    this.updateField(field);\n  }\n\n  private validator(control: FormGroup): { [key: string]: boolean } | null {\n    if (this.fieldGroup) {\n      return null;\n    }\n    const type = control.get('type') as FormControl;\n    const hasType = isString(type.value) && type.value.trim().length > 0;\n    const result = { type: false };\n    if (this.showType && !hasType) {\n      result.type = true;\n    }\n    return result.type ? result : null;\n  }\n}\n","import { AfterViewInit, Component, forwardRef, Input, OnChanges, OnDestroy, OnInit, SimpleChanges } from '@angular/core';\nimport { ControlValueAccessor, FormControl, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { Subscription, timer } from 'rxjs';\nimport { FormlyDesignerConfig } from '../';\n\nconst TYPE_SELECT_CONTROL_VALUE_ACCESSOR: any = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => TypeSelectComponent),\n  multi: true\n};\n\n@Component({\n  selector: 'formly-designer-type-select',\n  template: `\n    <select [formControl]=\"formControl\" class=\"custom-select\">\n      <option *ngFor=\"let type of types\" [ngValue]=\"type.value\">{{ type.label }}</option>\n    </select>\n  `,\n  styles: [`\n    select {\n      width: 100%;\n    }\n  `],\n  providers: [TYPE_SELECT_CONTROL_VALUE_ACCESSOR]\n})\nexport class TypeSelectComponent implements AfterViewInit, ControlValueAccessor, OnChanges, OnInit, OnDestroy {\n  private valueChangesSubscription?: Subscription;\n\n  @Input() type?: string;\n  @Input() fieldGroup?: boolean;\n  formControl = new FormControl();\n  types: { label: string; value: string }[] = [];\n\n  constructor(\n    private formlyDesignerConfig: FormlyDesignerConfig\n  ) { }\n\n  protected onChange = (value: any) => { };\n  protected onTouched = () => { };\n\n  ngAfterViewInit(): void {\n    this.updateTypes();\n  }\n\n  ngOnChanges(change: SimpleChanges): void {\n    if (change['fieldGroup']) {\n      this.updateTypes();\n    }\n  }\n\n  ngOnInit(): void {\n    this.valueChangesSubscription = this.formControl.valueChanges.subscribe(value => {\n      if (this.onChange) {\n        this.onChange(value);\n      }\n    });\n  }\n\n  ngOnDestroy(): void {\n    this.valueChangesSubscription?.unsubscribe();\n  }\n\n  writeValue(obj: any) {\n    this.formControl.setValue(obj);\n  }\n\n  registerOnChange(fn: any) {\n    this.onChange = fn;\n  }\n\n  registerOnTouched(fn: any) {\n    this.onTouched = fn;\n  }\n\n  setDisabledState(isDisabled: boolean): void {\n    if (isDisabled) {\n      this.formControl.disable();\n    } else {\n      this.formControl.enable();\n    }\n  }\n\n  private updateTypes(): void {\n    timer(0).subscribe(() => {\n      this.types = this.getTypes();\n      const type = this.fieldGroup && (this.type == null || this.type === '') ? 'formly-group' : this.type;\n      if (this.types.some(option => option.value === type)) {\n        this.formControl.setValue(type);\n      } else if (this.types.length > 0) {\n        this.formControl.setValue(this.types[0].value);\n      }\n    });\n  }\n\n  private getTypes(): { label: string, value: string }[] {\n    const types: { label: string, value: string }[] = [];\n    const entries = Object.entries(this.formlyDesignerConfig.types);\n    if (this.fieldGroup !== true) {\n      entries.forEach(([key, value]) => {\n        if (!value.fieldGroup) {\n          types.push({ label: key, value: key });\n        }\n      });\n    }\n    if (this.fieldGroup !== false) {\n      types.push({ label: 'fieldGroup', value: 'formly-group' });\n    }\n    if (this.fieldGroup !== false) {\n      entries.forEach(([key, value]) => {\n        if (value.fieldGroup) {\n          types.push({ label: key, value: key });\n        }\n      });\n    }\n    return types;\n  }\n}\n","import { Component, ElementRef, EventEmitter, Output, ViewChild } from '@angular/core';\nimport { FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\nimport { FormlyFieldConfig } from '@ngx-formly/core';\nimport { DesignerTypeOption, FormlyDesignerConfig } from '../formly-designer-config';\nimport { FormlyDesignerService } from '../formly-designer.service';\n\n@Component({\n  selector: 'formly-designer-field-picker',\n  template: `\n    <form novalidate [formGroup]=\"form\">\n      <div class=\"form-group\">\n        <div class=\"input-group\">\n          <formly-designer-type-select formControlName=\"type\">\n          </formly-designer-type-select>\n          <button type=\"button\" class=\"btn btn-secondary\" [disabled]=\"form.invalid\" (click)=\"add()\">\n            Add\n          </button>\n        </div>\n      </div>\n      <div #modal class=\"modal fade\" tabindex=\"-1\" role=\"dialog\">\n        <div class=\"modal-dialog modal-lg\" role=\"document\">\n          <div class=\"modal-content\">\n            <div class=\"modal-header\">\n              <h5 class=\"modal-title\">Add {{ typeName }}</h5>\n              <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Cancel\">\n                <span aria-hidden=\"true\">&times;</span>\n              </button>\n            </div>\n            <div class=\"modal-body\">\n              <formly-designer-field-editor #editor [fieldGroup]=\"fieldEdit.value.fieldGroup\" [formControl]=\"fieldEdit\">\n              </formly-designer-field-editor>\n            </div>\n            <div class=\"modal-footer\">\n              <button type=\"button\" class=\"btn btn-secondary\" data-dismiss=\"modal\">Cancel</button>\n              <button type=\"button\" class=\"btn btn-primary\" (click)=\"onApply()\"\n                [disabled]=\"editor.invalid\">Apply</button>\n            </div>\n          </div>\n        </div>\n      </div>\n    </form>\n  `,\n  styles: [`\n    .btn:not(:disabled) {\n      cursor: pointer;\n    }\n    .input-group > .btn {\n      border-radius: 0 .25rem .25rem 0;\n    }\n    .input-group, .modal-header {\n      display: flex;\n    }\n    .modal-header {\n      justify-content: space-between;\n    }\n    formly-designer-type-select {\n      flex-grow: 2;\n    }\n  `]\n})\nexport class FieldPickerComponent {\n  @ViewChild('modal', { static: true }) modalRef?: ElementRef;\n  @Output() selected = new EventEmitter<FormlyFieldConfig>();\n\n  constructor(\n    fb: FormBuilder,\n    private formlyDesignerConfig: FormlyDesignerConfig,\n    private formlyDesignerService: FormlyDesignerService,\n  ) {\n    this.form = fb.group({\n      type: this.type = fb.control('', Validators.compose([Validators.required, Validators.pattern(/^\\s*\\S.*$/)]))\n    });\n  }\n\n  form: FormGroup;\n  readonly fieldEdit = new FormControl({});\n  readonly type: FormControl;\n  fieldGroup = false;\n\n  get typeName(): string {\n    return this.formlyDesignerService.getTypeName(this.type.value);\n  }\n\n  private get $modal(): JQuery & { modal: (command: string) => void } {\n    return $(this.modalRef?.nativeElement) as any;\n  }\n\n  add(): void {\n    const type = this.type.value;\n    const field = {} as FormlyFieldConfig;\n    if (type !== 'formly-group') {\n      field.type = type;\n    }\n    const designerType = this.formlyDesignerConfig.types[type] || {} as DesignerTypeOption;\n    if (designerType.fieldArray) {\n      field.fieldArray = { fieldGroup: [] };\n    }\n    if (this.fieldGroup = (type === 'formly-group' || designerType.fieldGroup != null)) {\n      field.fieldGroup = [];\n    }\n    this.fieldEdit.setValue(field);\n    this.$modal.modal('show');\n  }\n\n  onApply(): void {\n    this.selected.emit(this.fieldEdit.value);\n    this.$modal.modal('hide');\n  }\n}\n","import { Component, HostBinding, OnDestroy, OnInit } from '@angular/core';\nimport { FormControl } from '@angular/forms';\nimport { FormlyFieldConfig } from '@ngx-formly/core';\nimport { FieldsService, FormlyDesignerConfig, FormlyDesignerService } from '../';\nimport { cloneDeep } from '../util';\nimport { Subscription, timer } from 'rxjs';\n\n@Component({\n  selector: 'formly-designer-properties',\n  template: `\n    <formly-designer-field-editor #editor [fieldGroup]=\"fieldGroup\" [hasContent]=\"true\" [showType]=\"true\" [showWrappers]=\"true\" [formControl]=\"fieldEdit\">\n      <div class=\"footer\">\n        <button (click)=\"remove()\" class=\"btn btn-secondary mr-1\">Remove</button>\n        <button (click)=\"cancel()\" class=\"btn btn-secondary ml-auto mr-1\">Cancel</button>\n        <button [disabled]=\"editor.invalid\" (click)=\"accept()\" class=\"btn btn-primary\">Apply</button>\n      </div>\n    </formly-designer-field-editor>\n  `,\n  styles: [`\n    .footer {\n      display: flex;\n    }\n  `]\n})\nexport class PropertiesComponent implements OnInit, OnDestroy {\n  private readonly subscriptions: Subscription[] = [];\n\n  fieldGroup = false;\n  fieldEdit = new FormControl({});\n  private field: FormlyFieldConfig | null = null;\n\n  @HostBinding('class.d-none')\n  get hasField() { return this.field == null; }\n\n  constructor(\n    private fieldsService: FieldsService,\n    private formlyDesignerConfig: FormlyDesignerConfig,\n    private formlyDesignerService: FormlyDesignerService\n  ) { }\n\n  ngOnInit(): void {\n    this.subscriptions.push(\n      this.formlyDesignerService.designerFields$.subscribe(fields => {\n        const designerId = this.field?.templateOptions?.['$designerId'];\n        this.setField(this.fieldsService.find(designerId, fields) ?? null);\n      }),\n      this.formlyDesignerService.selectedField$.subscribe(field => {\n        this.setField(field);\n      })\n    );\n  }\n\n  ngOnDestroy(): void {\n    this.subscriptions.splice(0).forEach(subscription => subscription.unsubscribe());\n  }\n\n  remove(): void {\n    if (this.field) {\n      this.formlyDesignerService.removeField(this.field);\n    }\n  }\n\n  accept(): void {\n    if (!this.fieldsService.checkField(this.fieldEdit.value, this.formlyDesignerService.designerFields)) {\n      return;\n    }\n    timer(0).subscribe(() => {\n      this.formlyDesignerService.updateField(this.field, this.fieldEdit.value);\n    });\n  }\n\n  cancel(): void {\n    this.setField(null);\n  }\n\n  private setField(field: FormlyFieldConfig | null): void {\n    if (field !== this.field) {\n      this.field = field;\n      this.fieldGroup = field?.type === 'formly-group' ||\n        (field?.type && this.formlyDesignerConfig.types[field.type]?.fieldGroup) != null;\n      this.fieldEdit.setValue(field ? cloneDeep(field) : {});\n    }\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { DragDropService, FormlyDesignerConfig } from '../';\nimport { DragDropType } from '../models';\n\n@Component({\n  selector: 'formly-designer-types',\n  template: `\n    <div class=\"d-control\" *ngFor=\"let type of types\" draggable=\"true\" (dragstart)=\"onDragStart($event, type.value)\" (dragend)=\"onDragEnd()\">\n      {{ type.label }}\n    </div>\n  `,\n  styles: [`\n    :host {\n      display: flex;\n      flex-direction: column;\n    }\n    div {\n      margin: 2px;\n      padding: .5rem;\n      border-radius: .75rem;\n      background-color: #bbdefb;\n      line-break: anywhere;\n      white-space: pre-line;\n      cursor: grab;\n      user-select: none;\n    }\n  `]\n})\nexport class TypesComponent implements OnInit {\n  types: { label: string; value: string }[] = [];\n\n  constructor(\n    private dragDropService: DragDropService,\n    private formlyDesignerConfig: FormlyDesignerConfig\n  ) { }\n\n  ngOnInit(): void {\n    this.types = this.getTypes();\n  }\n\n  onDragStart(event: DragEvent, type: string): void {\n    event.dataTransfer?.setData(DragDropType.Type, type);\n    this.dragDropService.beginDrag(type);\n  }\n\n  onDragEnd(): void {\n    this.dragDropService.endDrag();\n  }\n\n  private getTypes(): { label: string, value: string }[] {\n    const types: { label: string, value: string }[] = [];\n    const entries = Object.entries(this.formlyDesignerConfig.types);\n    entries.forEach(([key, value]) => {\n      if (!value.fieldGroup) {\n        types.push({ label: key, value: key });\n      }\n    });\n  /*  types.push({ label: 'fieldGroup', value: 'formly-group' });\n    entries.forEach(([key, value]) => {\n      if (value.fieldGroup) {\n        types.push({ label: key, value: key });\n      }\n    });\n\n   */\n    return types;\n  }\n\n}\n","import { Component, forwardRef, Input, OnChanges, OnDestroy, OnInit, SimpleChanges } from '@angular/core';\nimport { ControlValueAccessor, FormBuilder, FormGroup, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { FormlyFieldConfig } from '@ngx-formly/core';\nimport { Subscription, timer } from 'rxjs';\nimport { debounceTime, switchMap } from 'rxjs/operators';\nimport { FieldsService } from '../fields.service';\nimport { cloneDeep, isObject } from '../util';\n\nconst WRAPPER_EDITOR_CONTROL_VALUE_ACCESSOR: any = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => WrapperEditorComponent),\n  multi: true\n};\n\n@Component({\n  selector: 'formly-designer-wrapper-editor',\n  template: `\n    <form [formGroup]=\"fieldForm\" novalidate>\n      <div class=\"card\">\n        <div class=\"card-body\">\n          <formly-form [form]=\"fieldForm\" [fields]=\"fields\" [model]=\"field\">\n          </formly-form>\n          <ng-content></ng-content>\n        </div>\n      </div>\n    </form>\n  `,\n  providers: [\n    WRAPPER_EDITOR_CONTROL_VALUE_ACCESSOR\n  ]\n})\nexport class WrapperEditorComponent implements ControlValueAccessor, OnChanges, OnDestroy, OnInit {\n  @Input() wrapper: string | null = null;\n\n  private readonly subscriptions: Subscription[] = [];\n  private valueChangesSubscription?: Subscription;\n\n  constructor(\n    private fieldsService: FieldsService,\n    private formBuilder: FormBuilder\n  ) {\n    this.fieldForm = formBuilder.group({});\n  }\n\n  invalid = false;\n  fieldForm: FormGroup;\n  field?: FormlyFieldConfig;\n  fields: FormlyFieldConfig[] = [];\n\n  protected onChange = (value: any) => { };\n  protected onTouched = () => { };\n\n  ngOnInit(): void {\n    this.subscriptions.push(this.fieldForm.statusChanges\n      .pipe(switchMap(() => timer(0)))\n      .subscribe(() => this.invalid = this.fieldForm.invalid));\n\n    this.subscribeValueChanges();\n  }\n\n  ngOnDestroy(): void {\n    this.valueChangesSubscription?.unsubscribe();\n    this.subscriptions.splice(0).forEach(subscription => subscription.unsubscribe());\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    if (changes['wrapper']) {\n      if (this.valueChangesSubscription) {\n        this.valueChangesSubscription.unsubscribe();\n      }\n      this.fields = this.fieldsService.getWrapperFields(this.wrapper);\n      this.fieldForm = this.formBuilder.group({});\n      this.field = Object.assign({}, this.field);\n      if (this.valueChangesSubscription) {\n        this.subscribeValueChanges();\n      }\n    }\n  }\n\n  writeValue(obj: any) {\n    this.valueChangesSubscription?.unsubscribe();\n    if (!isObject(obj)) {\n      obj = {};\n    }\n    this.fields = this.fieldsService.getWrapperFields(this.wrapper);\n    this.fieldForm = this.formBuilder.group({});\n    this.field = cloneDeep(obj);\n    this.subscribeValueChanges();\n  }\n\n  registerOnChange(fn: any) {\n    this.onChange = fn;\n  }\n\n  registerOnTouched(fn: any) {\n    this.onTouched = fn;\n  }\n\n  setDisabledState(isDisabled: boolean): void {\n    if (isDisabled) {\n      this.fieldForm.disable();\n    } else {\n      this.fieldForm.enable();\n    }\n  }\n\n  private subscribeValueChanges(): void {\n    this.valueChangesSubscription = this.fieldForm.valueChanges\n      .pipe(debounceTime(0))\n      .subscribe(() => this.updateValue());\n  }\n\n  private updateValue(): void {\n    if (!this.onChange) {\n      return;\n    }\n\n    this.onChange(this.field);\n  }\n}\n","import { AfterViewInit, Component, forwardRef, OnDestroy, OnInit } from '@angular/core';\nimport { ControlValueAccessor, FormControl, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { Subscription, timer } from 'rxjs';\nimport { FormlyDesignerConfig } from '../formly-designer-config';\n\nconst WRAPPER_SELECT_CONTROL_VALUE_ACCESSOR: any = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => WrapperSelectComponent),\n  multi: true\n};\n\n@Component({\n  selector: 'formly-designer-wrapper-select',\n  template: `\n    <select [formControl]=\"formControl\" class=\"custom-select\">\n      <option *ngFor=\"let wrapper of wrappers\" [ngValue]=\"wrapper\">{{ wrapper }}</option>\n    </select>\n  `,\n  styles: [`\n    select {\n      width: 100%;\n    }\n  `],\n  providers: [WRAPPER_SELECT_CONTROL_VALUE_ACCESSOR]\n})\nexport class WrapperSelectComponent implements AfterViewInit, ControlValueAccessor, OnDestroy, OnInit {\n  private valueChangesSubscription?: Subscription;\n\n  constructor(\n    private formlyDesignerConfig: FormlyDesignerConfig\n  ) { }\n\n  formControl = new FormControl();\n  wrappers: string[] = [];\n\n  protected onChange = (value: any) => { };\n  protected onTouched = () => { };\n\n  ngAfterViewInit(): void {\n    timer(0).subscribe(() => {\n      this.wrappers = Object.keys(this.formlyDesignerConfig.wrappers);\n      if (this.wrappers.length > 0) {\n        this.formControl.setValue(this.wrappers[0]);\n      }\n    });\n  }\n\n  ngOnInit(): void {\n    this.valueChangesSubscription = this.formControl.valueChanges.subscribe(value => {\n      if (this.onChange) {\n        this.onChange(value);\n      }\n    });\n  }\n\n  ngOnDestroy(): void {\n    this.valueChangesSubscription?.unsubscribe();\n  }\n\n  writeValue(obj: any) {\n    this.formControl.setValue(obj);\n  }\n\n  registerOnChange(fn: any) {\n    this.onChange = fn;\n  }\n\n  registerOnTouched(fn: any) {\n    this.onTouched = fn;\n  }\n\n  setDisabledState(isDisabled: boolean): void {\n    if (isDisabled) {\n      this.formControl.disable();\n    } else {\n      this.formControl.enable();\n    }\n  }\n}\n","import { Component, ElementRef, EventEmitter, Input, Output, ViewChild } from '@angular/core';\nimport { FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\nimport { FormlyFieldConfig } from '@ngx-formly/core';\nimport { FormlyDesignerConfig } from '../formly-designer-config';\nimport { FormlyDesignerService } from '../formly-designer.service';\nimport { cloneDeep, isArray, isObject } from '../util';\n\ndeclare var $: JQueryStatic;\n\n@Component({\n  selector: 'formly-designer-wrapper-picker',\n  template: `\n    <form novalidate [formGroup]=\"form\">\n      <div class=\"form-group\">\n        <div class=\"input-group\">\n          <formly-designer-wrapper-select formControlName=\"wrapper\">\n          </formly-designer-wrapper-select>\n          <button type=\"button\" class=\"btn btn-secondary\" [disabled]=\"form.invalid\" (click)=\"add()\">\n            Add\n          </button>\n        </div>\n      </div>\n      <div #modal class=\"modal fade\" tabindex=\"-1\" role=\"dialog\">\n        <div class=\"modal-dialog modal-lg\" role=\"document\">\n          <div class=\"modal-content\">\n            <div class=\"modal-header\">\n              <h5 class=\"modal-title\">Add {{ wrapper }}</h5>\n              <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Cancel\">\n                <span aria-hidden=\"true\">&times;</span>\n              </button>\n            </div>\n            <div class=\"modal-body\">\n              <formly-designer-wrapper-editor #editor [formControl]=\"fieldEdit\" [wrapper]=\"wrapper\">\n              </formly-designer-wrapper-editor>\n            </div>\n            <div class=\"modal-footer\">\n              <button type=\"button\" class=\"btn btn-secondary\" data-dismiss=\"modal\">Cancel</button>\n              <button type=\"button\" class=\"btn btn-primary\" (click)=\"onApply()\"\n                [disabled]=\"editor.invalid\">Apply</button>\n            </div>\n          </div>\n        </div>\n      </div>\n    </form>\n  `,\n  styles: [`\n    :host {\n      width: inherit;\n    }\n    .btn:not(:disabled) {\n      cursor: pointer;\n    }\n    .input-group > .btn {\n      border-radius: 0 .25rem .25rem 0;\n    }\n    .input-group, .modal-header {\n      display: flex;\n    }\n    .modal-header {\n      justify-content: space-between;\n    }\n    formly-designer-wrapper-select {\n      flex-grow: 2;\n    }\n  `]\n})\nexport class WrapperPickerComponent {\n  @ViewChild('modal', { static: true }) modalRef?: ElementRef;\n  @Input() field?: FormlyFieldConfig;\n  @Output() selected = new EventEmitter<FormlyFieldConfig>();\n\n  constructor(\n    formBuilder: FormBuilder,\n    private formlyDesignerConfig: FormlyDesignerConfig,\n    private formlyDesignerService: FormlyDesignerService\n  ) {\n    this.form = formBuilder.group({\n      wrapper: ['', Validators.compose([Validators.required, Validators.pattern(/^\\s*\\S.*$/)])]\n    });\n  }\n\n  form: FormGroup;\n  fieldEdit = new FormControl({});\n\n  get wrapper(): string | null {\n    return this.form.get('wrapper')?.value;\n  }\n\n  private get $modal(): JQuery & { modal: (command: string) => void } {\n    return $(this.modalRef?.nativeElement) as any;\n  }\n\n  add(): void {\n    if (!this.wrapper) {\n      return;\n    }\n    if (isObject(this.field)) {\n      const field = cloneDeep(this.field) as FormlyFieldConfig;\n      if (isArray(field.wrappers) && field.wrappers.length > 0) {\n        field.wrappers.splice(field.wrappers.length - 1, 0, this.wrapper);\n      } else {\n        field.wrappers = [this.wrapper];\n      }\n      this.fieldEdit.setValue(field);\n\n      const fields = this.formlyDesignerConfig.wrappers[this.wrapper].fields;\n      if (isArray(fields) && fields.length > 0) {\n        this.$modal.modal('show');\n      } else {\n        this.onApply();\n      }\n    }\n  }\n\n  onApply(): void {\n    this.field = this.formlyDesignerService.createPrunedField(this.fieldEdit.value);\n    this.selected.emit(this.fieldEdit.value);\n    this.$modal.modal('hide');\n  }\n}\n","import { Component, ElementRef, EventEmitter, Input, OnChanges, Output, SimpleChanges, ViewChild } from '@angular/core';\nimport { FormControl } from '@angular/forms';\nimport { FormlyFieldConfig } from '@ngx-formly/core';\nimport { FormlyDesignerConfig } from '../formly-designer-config';\nimport { FormlyDesignerService } from '../formly-designer.service';\nimport { cloneDeep, isArray, isObject } from '../util';\n\n@Component({\n  selector: 'formly-designer-wrappers-picker',\n  template: `\n    <div class=\"form-group\">\n      <div class=\"input-group\">\n        <formly-designer-wrapper-picker [field]=\"field\" (selected)=\"onWrapperSelected($event)\">\n        </formly-designer-wrapper-picker>\n      </div>\n      <div *ngFor=\"let wrapper of wrappers; let i = index\" class=\"badge badge-default noselect\" (click)=\"edit(i)\">\n        {{ wrapper }}&nbsp;&nbsp;<i class=\"fa fa-times\" aria-hidden=\"true\" (click)=\"remove(i)\"></i>\n      </div>\n    </div>\n    <div #modal class=\"modal fade\" tabindex=\"-1\" role=\"dialog\">\n      <div class=\"modal-dialog modal-lg\" role=\"document\">\n        <div class=\"modal-content\">\n          <div class=\"modal-header\">\n            <h5 class=\"modal-title\">Edit {{ wrapper }}</h5>\n            <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Cancel\">\n              <span aria-hidden=\"true\">&times;</span>\n            </button>\n          </div>\n          <div class=\"modal-body\">\n            <formly-designer-wrapper-editor #editor [formControl]=\"fieldEdit\" [wrapper]=\"wrapper\">\n            </formly-designer-wrapper-editor>\n          </div>\n          <div class=\"modal-footer\">\n            <button type=\"button\" class=\"btn btn-secondary\" data-dismiss=\"modal\">Cancel</button>\n            <button type=\"button\" class=\"btn btn-primary\" (click)=\"onApply()\"\n              [disabled]=\"editor.invalid\">Apply</button>\n          </div>\n        </div>\n      </div>\n    </div>\n    `,\n  styles: [`\n    .badge {\n      margin-right: .25em;\n    }\n    .badge {\n      cursor: pointer;\n    }\n    .noselect {\n      -webkit-user-select: none;\n      -khtml-user-select: none;\n      -moz-user-select: none;\n      -ms-user-select: none;\n      user-select: none;\n    }\n  `]\n})\nexport class WrappersPickerComponent implements OnChanges {\n  @ViewChild('modal', { static: true }) modalRef?: ElementRef;\n  @Input() field?: FormlyFieldConfig;\n  @Output() selected = new EventEmitter<FormlyFieldConfig>();\n\n  wrapper: string | null = null;\n  fieldEdit = new FormControl({});\n\n  wrappers: string[] = [];\n\n  constructor(\n    private formlyDesignerConfig: FormlyDesignerConfig,\n    private formlyDesignerService: FormlyDesignerService\n  ) { }\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (changes['field']) {\n      this.wrappers = this.formlyDesignerService.getWrappers(changes['field'].currentValue);\n    }\n  }\n\n  private get $modal(): JQuery & { modal: (command: string) => void } {\n    return $(this.modalRef?.nativeElement) as any;\n  }\n\n  onWrapperSelected(field: FormlyFieldConfig): void {\n    this.selected.emit(field);\n  }\n\n  edit(index: number): void {\n    this.wrapper = this.wrappers[index];\n    if (isObject(this.field)) {\n      const field = cloneDeep(this.field);\n      if (isArray(field?.wrappers)) {\n        this.fieldEdit.setValue(field);\n\n        const fields = this.formlyDesignerConfig.wrappers[this.wrapper].fields;\n        if (isArray(fields) && fields.length > 0) {\n          this.$modal.modal('show');\n        } else {\n          this.onApply();\n        }\n      }\n    }\n  }\n\n  remove(index: number): void {\n    const fieldWrappersIndex = this.field?.wrappers?.indexOf(this.wrappers[index]) ?? -1;\n    if (fieldWrappersIndex < 0) {\n      return;\n    }\n\n    const field = cloneDeep(this.field) as FormlyFieldConfig;\n    (field.wrappers as string[]).splice(fieldWrappersIndex, 1);\n    this.field = this.formlyDesignerService.createPrunedField(field);\n    this.selected.emit(this.field);\n  }\n\n  onApply(): void {\n    this.field = this.formlyDesignerService.createPrunedField(this.fieldEdit.value);\n    this.selected.emit(this.field);\n    this.$modal.modal('hide');\n  }\n}\n","import { cloneDeep, isArray, isObject } from './util';\n\nexport function decycle<T>(value: T): T {\n  if (value == null) {\n    return value;\n  }\n\n  let nextId = 1;\n  const objects = new Map<any, number>();\n  return traverse(cloneDeep(value), (_key, v) => {\n    if (isObject(v)) {\n      if (objects.has(v)) {\n        let id = objects.get(v);\n        if (!id) {\n          v.$id = id = nextId++;\n          objects.set(v, id);\n        }\n        return { $ref: id };\n      } else {\n        objects.set(v, 0);\n      }\n    }\n    return;\n  });\n}\n\nfunction traverse<T>(obj: T, replace: (key: string, value: any) => any): T {\n  if (isArray(obj)) {\n    for (let i = 0; i < (obj as unknown[]).length; i++) {\n      traverseValue.bind(obj, i, obj[i], replace)();\n    }\n  } else if (isObject(obj)) {\n    for (const key in obj) {\n      if ((obj as Object).hasOwnProperty(key)) {\n        traverseValue.bind(obj, key, obj[key], replace)();\n      }\n    }\n  }\n  return obj;\n}\n\nfunction traverseValue(this: any, key: string, value: any, replace: (key: string, value: any) => any): void {\n  const replacement = replace(key, value);\n  if (replacement === undefined) {\n    traverse(value, replace);\n  } else if (this) {\n    this[key] = replacement;\n  }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { decycle } from '../json-helper';\n\n@Pipe({ name: 'decycle' })\nexport class DecyclePipe implements PipeTransform {\n    transform(value: any): any {\n        return decycle(value);\n    }\n}\n","import { CommonModule } from '@angular/common';\nimport { ANALYZE_FOR_ENTRY_COMPONENTS, ModuleWithProviders, NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { FormlyConfig, FormlyForm, FormlyModule } from '@ngx-formly/core';\nimport 'jquery';\nimport { FieldEditorComponent } from './components/field-editor';\nimport { FieldPickerComponent } from './components/field-picker';\nimport { PropertiesComponent } from './components/properties';\nimport { TypeSelectComponent } from './components/type-select';\nimport { TypesComponent } from './components/types';\nimport { WrapperEditorComponent } from './components/wrapper-editor';\nimport { WrapperPickerComponent } from './components/wrapper-picker';\nimport { WrapperSelectComponent } from './components/wrapper-select';\nimport { WrappersPickerComponent } from './components/wrappers-picker';\nimport { Config, fieldComponents, wrapperComponents } from './config';\nimport { DragDropService } from './drag-drop.service';\nimport { DesignerExtension } from './extensions/designer';\nimport { FieldsService } from './fields.service';\nimport { DesignerConfigOption, FormlyDesignerConfig, FORMLY_DESIGNER_CONFIG_TOKEN } from './formly-designer-config';\nimport { FormlyDesignerComponent } from './formly-designer.component';\nimport { DecyclePipe } from './pipes/decycle';\n\n@NgModule({\n  declarations: [\n    FieldEditorComponent,\n    FieldPickerComponent,\n    FormlyDesignerComponent,\n    PropertiesComponent,\n    TypesComponent,\n    TypeSelectComponent,\n    WrapperEditorComponent,\n    WrapperSelectComponent,\n    WrapperPickerComponent,\n    WrappersPickerComponent,\n\n    DecyclePipe,\n\n    fieldComponents,\n    wrapperComponents\n  ],\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n\n    FormlyModule.forChild()\n  ],\n  exports: [\n    FieldEditorComponent,\n    FormlyDesignerComponent,\n    PropertiesComponent,\n    TypesComponent,\n    WrapperEditorComponent\n  ],\n  providers: [\n    Config,\n    DesignerExtension,\n    DragDropService,\n    FormlyDesignerConfig,\n    FieldsService\n  ],\n  entryComponents: [FormlyForm]\n})\nexport class FormlyDesignerModule {\n  constructor(\n    config: Config,\n    formlyConfig: FormlyConfig\n  ) {\n    formlyConfig.addConfig(config);\n  }\n\n  static forRoot(designerConfig: DesignerConfigOption = {}): ModuleWithProviders<FormlyDesignerModule> {\n    return {\n      ngModule: FormlyDesignerModule,\n      providers: [\n        { provide: ANALYZE_FOR_ENTRY_COMPONENTS, useValue: [fieldComponents, wrapperComponents], multi: true },\n        { provide: FORMLY_DESIGNER_CONFIG_TOKEN, useValue: designerConfig, multi: true }\n      ]\n    };\n  }\n}\n","/*\n * Public API Surface of ngx-formly-designer\n */\n\nexport * from './lib/config';\nexport * from './lib/fields.service';\nexport * from './lib/formly-designer-config';\nexport * from './lib/formly-designer.service';\nexport * from './lib/formly-designer.component';\nexport * from './lib/formly-designer.module';\nexport * from './lib/json-helper';\n\nexport * from './lib/components/wrapper-editor';\nexport * from './lib/components/properties';\nexport * from './lib/components/field-editor';\nexport * from './lib/components/types';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public_api';\n"],"names":["i1","i1.FormlyDesignerConfig","i2.FieldsService","isString","i2.ParentService","i3","i1.DesignerExtension","i1.DragDropService","i1.FieldsService","i1.FormlyDesignerService","i3.ParentService","i4","i5","i2.FormlyDesignerConfig","i3.FormlyDesignerService","i4.TypeSelectComponent","i5.FieldEditorComponent","i2.FieldEditorComponent","i2","i4.WrapperSelectComponent","i5.WrapperEditorComponent","i2.FormlyDesignerService","i3.WrapperPickerComponent","i4.WrapperEditorComponent","i6","i1.Config"],"mappings":"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"}